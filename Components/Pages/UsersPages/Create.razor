@page "/admin/user/create"

@rendermode @(new InteractiveServerRenderMode(false))

@inject NavigationManager NavManager
@inject UserManager<ApplicationUser> _userManager;

@attribute [Authorize(Roles = SD.Role_Admin)]

<PageTitle>Create User</PageTitle>

<h1 class="text-center fw-bold">CREATE USER</h1>
<hr />
<Card Class="shadow-sm">
    <CardBody>
        <EditForm method="post" Model="UserInput" OnValidSubmit="OnValidSubmitAsync" FormName="createUser">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-6">
                    <div class="form-floating">
                        <InputText id="firstname" @bind-Value="UserInput.FirstName" class="form-control" placeholder="Sami" />
                        <label for="firstname">First Name</label>
                        <small><ValidationMessage For="() => UserInput.FirstName" class="text-danger" /></small>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-floating">
                        <InputText id="lastname" @bind-Value="UserInput.LastName" class="form-control" placeholder="Sami" />
                        <label for="lastname">Last Name</label>
                        <small><ValidationMessage For="() => UserInput.LastName" class="text-danger" /></small>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <div class="form-floating">
                        <InputText id="Email" @bind-Value="UserInput.Email" class="form-control" placeholder="name@example.com" />
                        <label for="Email">Email</label>
                        <small><ValidationMessage For="() => UserInput.Email" class="text-danger" /></small>
                    </div>
                </div>
                <div class="col">
                    <div class="form-floating">
                        <InputText id="PhoneNumber" @bind-Value="UserInput.PhoneNumber" class="form-control" placeholder="0500000000" />
                        <label for="PhoneNumber">Phone Number</label>
                        <small><ValidationMessage For="() => UserInput.PhoneNumber" class="text-danger" /></small>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <div class="form-floating">
                        <InputText type="password" id="Password" @bind-Value="UserInput.Password" class="form-control" placeholder="Password" />
                        <label for="Password">Password</label>
                        <small><ValidationMessage For="() => UserInput.Password" class="text-danger" /></small>
                    </div>
                </div>
                <div class="col">
                    <div class="form-floating">
                        <InputText type="password" id="ConfirmPassword" @bind-Value="UserInput.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                        <label for="ConfirmPassword">Confirm Password</label>
                        <small><ValidationMessage For="() => UserInput.ConfirmPassword" class="text-danger" /></small>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-floating mb-3">
                <InputSelect id="Role" class="form-select" @bind-Value="UserInput.Role">
                    <option selected> @SD.Role_ClientService</option>
                    <option>@SD.Role_OperationManager</option>
                    <option>@SD.Role_Accountant</option>
                    <option>@SD.Role_Manager</option>
                </InputSelect>
                <label for="Role">Role</label>
            </div>
            <Button Type="ButtonType.Submit" Color="ButtonColor.Primary" Class="px-4">Create</Button>
        </EditForm>
    </CardBody>
    <CardFooter>
        <div class="text-end">
            <Button Type="ButtonType.Link" To="/admin/users" Color="ButtonColor.Secondary" Outline="true" Class="px-4">Cancel</Button>
        </div>
    </CardFooter>
</Card>

@code {
    [SupplyParameterFromForm]
    private UserCreateDTO UserInput { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        // Create a new ApplicationUser object with the input data
        ApplicationUser User = new()
            {
                FirstName = UserInput.FirstName,
                LastName = UserInput.LastName,
                Email = UserInput.Email,
                UserName = UserInput.Email,
                PhoneNumber = UserInput.PhoneNumber,
                CreatedAt = DateTime.Now
            };
        try
        {
            // Create the user in the identity system
            var result = await _userManager.CreateAsync(User, UserInput.Password);

            // If user creation is successful, add the user to the selected role
            if (result.Succeeded)
            {
                await _userManager.AddToRoleAsync(User, UserInput.Role);
            }
            // Navigate to the admin users page
            NavManager.NavigateTo("/admin/users");
        }
        catch (Exception ex)
        {
            // Log any exception that occurs during user creation
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}