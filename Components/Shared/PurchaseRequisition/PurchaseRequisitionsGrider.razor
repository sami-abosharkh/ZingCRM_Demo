<Grid TItem="PurchaseRequisition"
      Class="table table-hover table-bordered table-striped"
      Data="Data"
      AllowSorting="true"
      FixedHeader="@(Data.Count > 9 ? true : false)"
      Height="410"
      Unit="Unit.Px"
      Responsive="true">
    <GridColumns>
        <GridColumn TItem="PurchaseRequisition" HeaderText="PR #" SortKeySelector="item => item.Number">
            <Tooltip Class="px-2" Title="@context.Description" Placement="TooltipPlacement.Right">@(context.Number > 0 ? context.Number.ToString("N0") : "#")</Tooltip>
        </GridColumn>
        <GridColumn TItem="PurchaseRequisition" HeaderText="Status" SortKeySelector="item => item.Status">
            @context.Status
        </GridColumn>
        <GridColumn TItem="PurchaseRequisition" HeaderText="Requested Amount" SortKeySelector="item => item.RequestedAmount">
            @context.RequestedAmount.ToString("N2")
        </GridColumn>
        <GridColumn TItem="PurchaseRequisition" HeaderText="Time Created" SortKeySelector="item => item.Date">
            @context.Date
        </GridColumn>
    </GridColumns>
</Grid>

<div class="row">
    <div class="col-md-3">
        <DetailCard Title="Total Budget" Detail="@TotalBudget?.ToString("N2")"></DetailCard>
    </div>
    <div class="col-md-3">
        <DetailCard Title="Total Requested" Detail="@TotalRequested?.ToString("N2")"></DetailCard>
    </div>
    <div class="col-md-3">
        <DetailCard Title="Total Transferred" Detail="@TotalTransferred?.ToString("N2")"></DetailCard>
    </div>
    <div class="col-md-3">
        <DetailCard Title="Total Remaining" Detail="@TotalRemaining?.ToString("N2")"></DetailCard>
    </div>
</div>

@code {
    [Parameter]
    public List<PurchaseRequisition> Data { get; set; } = default!;

    [Parameter]
    public EventCallback<PurchaseRequisition> OnPushCB { get; set; }

    [Parameter]
    public decimal? TotalBudget { get; set; }
    private decimal? TotalRemaining { get; set; }
    private decimal? TotalRequested { get; set; }
    private decimal? TotalTransferred { get; set; }

    protected override void OnParametersSet()
    {
        RefreshData();
    }

    private void RefreshData()
    {
        if (Data.Any())
        {
            TotalRequested = Data.Sum(item => item.RequestedAmount);
            TotalRemaining = TotalBudget - TotalRequested;
            TotalTransferred = Data.Where(item => item.Status.Equals(SD.Status_Transferred)).Sum(item => item.RequestedAmount);
        }
    }

    private sealed class PurchaseRequisitionVM
    {
        public int Number { get; set; }
        public string Description { get; set; }
        public string Status { get; set; }
        public decimal RequestedAmount { get; set; }
        public DateTime Date { get; set; }
    }
}
